@page "/posts/create"
@using HttpClients.ClientInterfaces
@using Domain
@using Domain.DTOs
@attribute [Authorize]
@inject IPostService PostService
@inject NavigationManager NavigationManager


<h3>CreatePost</h3>
<div class="card">

    <div class="card-body d-flex flex-column">
        <div class="d-flex w-50">
            
            <label for="title-input">Title</label>
            <input id="title-input" name="title" type="text" @bind="title"/>
            <label for="body-input">Body</label>
            <input name="body" id="body-input" type="text" @bind="body">

            <button type="submit" @onclick="CreateAsync">Create</button>
        </div>
        <div class="text-danger">
            @errorLabel
        </div>
    </div>
</div>


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    
    private string title;
    private string body;
    private string errorLabel;
    private string username;

    private async Task CreateAsync()
    {
        PostCreationDto dto = new PostCreationDto(title, body, username);
        try
        {
            await PostService.CreateAsync(dto);
            NavigationManager.NavigateTo("/posts");
        }
        catch (Exception e)
        {
            errorLabel = e.Message;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authenticationState = await AuthState;
        username = authenticationState.User.Identity.Name;
    }
}